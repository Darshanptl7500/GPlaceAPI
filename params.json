{"name":"GPlaceAPI","tagline":"GPlaceAPI is an open-source iOS Objective-C library for fetching Google Places API using simple blocks based API callbacks.","body":"#GPlaceAPI\r\n\r\nGPlaceAPI is an open-source iOS Objective-C library for fetching [Google Places API][1] using simple blocks based API callbacks.\r\n\r\nIts Main purpose it to use Google Places API requests with ease in a less lines of code. \r\n\r\nThis includes following:\r\n\r\n - [Place Search][2]\r\n     - Nearby Search (search places in a specified area)\r\n     - Text Search (search places based on a search string)\r\n - [Place Details][3] (get more comprehensive information about a place)\r\n - [Place Photos][6] (Get more info about place photos) (Remaining)\r\n - [Place Autocomplete][7]  (Get place predictions based on the search text)\r\n - [Query Autocomplete][8](Get on-the-fly geographic query predictions)\r\n\r\n##How To Use\r\n\r\n###Cocoapods\r\nGPlaceAPI is available in cocoapods. you can add it in your project as below\r\n\r\n`pod \"GPlaceAPI\", \"~> 1.0\"`\r\n\r\n### Manual (or using git submodule)\r\n 1. Implement [AFNetworking 2.0][4]\r\n    - GPlaceAPI uses AFNetworking 2.0 so, you need to add AFNetworking in your project \r\n 2. Download source files from this repository\r\n 3. Add all files from *GPlaceAPI* folder to your project's target\r\n\r\n##Usage\r\n\r\nYou can take a look at the detailed example usage project *GPlaceAPIExample/GPlaceAPIExample.xcodeproj*.\r\n\r\n#### 1. Import GPlaceAPI files in your implementation file\r\n\r\n`#import \"GPHeader.h\"`\r\n\r\n#### 2. Setup Google Place API key\r\n\r\nIn order to communicate with a Google Places API, you must first generate your own API key. Please take a look at [Introduction - Google Places API][5].\r\n\r\nYou must provide API key to a `GPlaceAPI` before making any request using it.\r\n\r\n//Open \"AppDelegate.h\" and set your API_KEY\r\n\r\n`[[GPlaceAPISetup sharedInstance] setApi_Key:@\"SET_API_KEY\"];`\r\n\r\n#### 3. Making a request & get Resonse\r\n```\r\n CLLocationCoordinate2D location = CLLocationCoordinate2DMake(51.501103,-0.124565);\r\n GPPlaceSearchRequest *request =[[GPPlaceSearchRequest alloc] initWithLocationCoordinate:location];\r\n request.radius = 5000;\r\n [request doFetchPlaces:^(GPPlaceSearchResponse *response, NSError *error) {\r\n       \tif(!error){\r\n\t\t\tif(response.status ==  GPRequestStatusOK) {\r\n                // Access place results by below model\r\n                GPResult *result =response.results[0];\r\n                NSLog(@\"%@\",result.name);\r\n            }\r\n       } \r\n    }];\r\n```\r\nPlease check [Google Places API documentation][1] for request and resonse. you can search all request parameters and get response of all objects mentioned in [Google Places API documentation][1].\r\n\r\n\r\n##Compatibility\r\n\r\n - iOS 7.0+\r\n\r\n##TODOs\r\n\r\n- Add [Place Photos][6] (Get more info about place photos)\r\n- Add Example project on how to use this library.\r\n- Write test cases for this library.\r\n\r\n##Contact\r\n\r\nGPlaceAPI is developed by [Darshan Patel](http://iosexception.com). Please [email](mailto:developer.ios89@gmail.com) to let me know you how you are using this library and anything related to this library.\r\n\r\n  [1]: https://developers.google.com/places/documentation/\r\n  [2]: https://developers.google.com/places/documentation/search\r\n  [3]: https://developers.google.com/places/documentation/details\r\n  [4]:https://github.com/AFNetworking/AFNetworking\r\n  [5]: https://developers.google.com/places/documentation/#Authentication\r\n  [6]:https://developers.google.com/places/webservice/photos\r\n  [7]:https://developers.google.com/places/webservice/autocomplete\r\n  [8]:https://developers.google.com/places/webservice/query\r\n  \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}